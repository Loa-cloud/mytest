# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on: workflow_dispatch

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.10", "3.11"]

    steps:
    
    - uses: actions/checkout@v3
    - run: git submodule init
    - run: git submodule update
    - run: pip install --user cpp-coveralls
    - run: pip install pygame
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    #- name: Test with pytest
    #  run: |
    #    pytest

    - name: Run Python unit tests
      run: |
          python3 -u -m unittest tests/test.py
          python3 -u -m unittest tests/test_intefration.py

    #
      #run: ./tests/tests
    - name: Coveralls
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      run: |
        # pip install coveralls
        coverage run --source=mypkg -m unittest tests/test.py
        coveralls
      #run: coveralls -t ${{ secrets.COVERALLS_REPO_TOKEN }} --root . -E ".*external.*" -E ".*tests.*"
    #  run: coveralls -t ${{ secrets.COVERALLS_REPO_TOKEN }} --root . -E ".*test.*"

   




  # Sonar Qube
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}





    #- name: Coveralls
    #  run: coveralls -t ${{ secrets.COVERALLS_REPO_TOKEN }}
